{"version":3,"sources":["actions/types.js","actions/messages.js","actions/auth.js","components/layout/Header.js","components/tasks/Tasks.js","actions/tasks.js","components/tasks/Dashboard.js","components/accounts/Login.js","components/accounts/Register.js","components/common/PrivateRoute.js","reducers/tasks.js","reducers/errors.js","reducers/messages.js","reducers/auth.js","reducers/index.js","store.js","components/layout/Alerts.js","App.js","reportWebVitals.js","index.js"],"names":["GET_TASKS","DELETE_TASK","ADD_TASK","UPDATE_TASK","GET_ERRORS","CREATE_MESSAGE","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","createMessage","msg","type","payload","returnErrors","status","tokenConfig","getState","token","auth","config","headers","Header","this","props","isAuthenticated","user","authLinks","className","username","onClick","logout","guestLinks","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Component","connect","state","dispatch","axios","post","then","res","catch","err","response","data","Tasks","title","editask","editing","onChange","e","setState","target","name","value","onSubmit","preventDefault","task","addTask","ctask","updateTask","getTasks","completed","style","flex","rows","placeholder","onReset","tasks","map","index","strikeUnstrike","onEdit","deleteTask","bind","created_at","substring","sort","a","b","get","delete","console","log","patch","Dashboard","Login","password","login","body","JSON","stringify","Register","email","password2","passwordNotMatch","newUser","register","component","rest","render","isLoading","initialState","localStorage","getItem","parse","combineReducers","action","filter","errors","messages","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Alerts","prevProps","error","alert","message","join","non_field_errors","success","withAlert","alertOptions","timeout","position","App","template","AlertTemplate","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad82e0cf.chunk.js","sourcesContent":["export const GET_TASKS = 'GET_TASKS';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const ADD_TASK = 'ADD_TASK';\nexport const UPDATE_TASK = 'UPDATE_TASK';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CREATE_MESSAGE = 'CREATE_MESSAGE';\nexport const USER_LOADING = 'USER_LOADING';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const CLEAR_TASKS = 'CLEAR_TASKS';","import { CREATE_MESSAGE, GET_ERRORS } from './types';\n\n// CREATE MESSAGE\nexport const createMessage = msg => {\n  return {\n    type: CREATE_MESSAGE,\n    payload: msg\n  };\n};\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status) => {\n  return {\n    type: GET_ERRORS,\n    payload: { msg, status },\n  };\n};","import axios from 'axios';\nimport { returnErrors } from './messages';\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n} from './types';\n\n// CHECK TOKEN & LOAD USER\nexport const loadUser = () => (dispatch, getState) => {\n  // User Loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get('/api/auth/user', tokenConfig(getState))\n    .then((res) => {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: AUTH_ERROR,\n      });\n    });\n};\n\n// LOGIN USER\nexport const login = (username, password) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, password });\n\n  axios\n    .post('/api/auth/login', body, config)\n    .then((res) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n    });\n};\n\n// REGISTER USER\nexport const register = ({ username, password, email }) => (dispatch) => {\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // Request Body\n  const body = JSON.stringify({ username, email, password });\n  //http://127.0.0.1:8000\n  axios\n    .post('/api/auth/register', body, config)\n    .then((res) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n    });\n};\n\n// LOGOUT USER\nexport const logout = () => (dispatch, getState) => {\n  axios\n    .post('/api/auth/logout/', null, tokenConfig(getState))\n    .then((res) => {\n      dispatch({ type: 'CLEAR_LEADS' });\n      dispatch({\n        type: LOGOUT_SUCCESS,\n      });\n    })\n    .catch((err) => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n    });\n};\n\n// Setup config with token - helper function\nexport const tokenConfig = (getState) => {\n  // Get token from state\n  const token = getState().auth.token;\n\n  // Headers\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  // If token, add to headers config\n  if (token) {\n    config.headers['Authorization'] = `Token ${token}`;\n  }\n\n  return config;\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nexport class Header extends Component {\n  static propTypes = {\n    auth: PropTypes.object.isRequired,\n    logout: PropTypes.func.isRequired,\n  };\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    const authLinks = (\n      <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n        <span className=\"navbar-text mr-3\">\n          <strong>{user ? `Welcome ${user.username}` : ''}</strong>\n        </span>\n        <li className=\"nav-item\">\n          <button onClick={this.props.logout} className=\"nav-link btn btn-info btn-sm text-light\">\n            Logout\n          </button>\n        </li>\n      </ul>\n    );\n\n    const guestLinks = (\n      <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n        <li className=\"nav-item\">\n          <Link to=\"/register\" className=\"nav-link\">\n            Register\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/login\" className=\"nav-link\">\n            Login\n          </Link>\n        </li>\n      </ul>\n    );\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\n        <div className=\"container\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarTogglerDemo01\"\n            aria-controls=\"navbarTogglerDemo01\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\n            <a className=\"navbar-brand\" href=\"#\">\n              ToDo App\n            </a>\n          </div>\n          {isAuthenticated ? authLinks : guestLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { getTasks, deleteTask, addTask, updateTask } from '../../actions/tasks';\nimport './Tasks.css'\n\nexport class Tasks extends Component {\n\n    state = {\n        title: '',\n        editask: '',\n        editing: false\n      };\n\n    static propTypes = {\n        tasks: PropTypes.array.isRequired,\n        getTasks: PropTypes.func.isRequired,\n        deleteTask: PropTypes.func.isRequired,\n        addTask: PropTypes.func.isRequired,\n        updateTask: PropTypes.func.isRequired,\n    }\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n    componentDidMount() {\n        this.props.getTasks();\n    }\n\n    strikeUnstrike(task){\n        task.completed = !task.completed\n        this.props.updateTask(task)\n    }\n\n    onEdit(task) {\n        this.setState({\n            editask: task,\n            title: task.title,\n            editing: true\n        })\n        //console.log(task)\n    }\n    onReset() {\n        this.setState({editing: false, title: '', editask: ''})\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        \n        if(this.state.editing === false) {\n            const task = { title:this.state.title };\n            this.props.addTask(task)\n            this.setState({\n                title: '',\n            });\n        } else if(this.state.editing === true) {\n            var ctask = this.state.editask\n            ctask.title = this.state.title\n            //console.log(ctask)\n            this.props.updateTask(ctask)\n            this.setState({editing: false, title: '', editask: ''})\n        }\n        \n        /*\n        const task = { title:this.state.title };\n        console.log(task)\n        this.props.addTask(task)\n        this.setState({\n            title: '',\n        });*/\n    }\n\n    render() {\n        const { title } = this.state;\n        return (\n            <Fragment>\n                <div id=\"task-container\">\n                    <div id=\"form-wrapper\">\n                        <form onSubmit={this.onSubmit} id=\"form\">\n                            <div className=\"flex-wrapper\">\n                                <div style={{flex: 15}}>\n                                    <textarea \n                                        onChange={this.onChange} \n                                        rows={1}\n                                        className=\"form-control\" \n                                        id=\"title\" \n                                        value={title} \n                                        type=\"text\" \n                                        name=\"title\" \n                                        placeholder=\"Add task..\" \n                                    />\n                                </div>\n                                <div \n                                    style={{flex: 1}} \n                                    onClick={() => this.onReset()}\n                                    className=\"resetBtn\"\n                                >\n                                    X\n                                </div>\n                                <div style={{flex: 2}}>\n                                {this.state.editing === false ? (\n                                    <button type=\"submit\" className=\"btn btn-primary\">\n                                        Submit\n                                    </button>\n                                ):(\n                                    <button type=\"submit\" className=\"btn btn-primary\">\n                                        Edit\n                                    </button>\n                                )}\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                <h2>Tasks</h2>\n                <ul className=\"tilesWrap\">\n                    {this.props.tasks.map((task, index) => (\n                        <li key={task.id}>\n                            <h2>0{index+1}</h2>\n                            <div className='tasktitle' onClick={() => this.strikeUnstrike(task)}>\n                                {task.completed === false ? (\n                                    <p>{task.title}</p>\n                                ) : (\n                                    <strike>{task.title}</strike>\n                                )}\n                            </div>\n                            <button\n                                onClick={() => this.onEdit(task)}\n                                className=\"btn btn-info btn-sm\"\n                            >\n                                {' '}\n                                Edit\n                            </button>\n                            <button\n                                onClick={this.props.deleteTask.bind(this, task.id)}\n                                className=\"btn btn-danger btn-sm\"\n                            >\n                                {' '}\n                                Delete\n                            </button>\n                            <div className=\"taskDate\">\n                                Added on: {task.created_at.substring(0,10)}\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    tasks: state.tasks.tasks.sort((a,b) => (a.created_at < b.created_at ? 1 :-1)),\n})\n\nexport default connect(\n    mapStateToProps, \n    { getTasks, deleteTask, addTask, updateTask }\n)(Tasks);","import axios from 'axios';\nimport { createMessage, returnErrors } from './messages';\nimport { tokenConfig } from './auth';\n\nimport { GET_TASKS, DELETE_TASK, ADD_TASK, UPDATE_TASK } from './types';\n\n//GET TASKS\nexport const getTasks = () => (dispatch, getState) => {\n    axios\n    .get('/api/tasks/', tokenConfig(getState))\n    .then(res => {\n        dispatch({\n            type: GET_TASKS,\n            payload: res.data\n        });\n    })\n    .catch((err) => dispatch(returnErrors(err.response.data, err.response.status)));\n};\n\n// DELETE Tasks\nexport const deleteTask = id => (dispatch, getState) => {\n    axios\n      .delete(`/api/tasks/${id}/`, tokenConfig(getState))\n      .then(res => {\n        dispatch(createMessage({ deleteTask: \"Task Deleted\"}));\n        dispatch({\n          type: DELETE_TASK,\n          payload: id,\n        });\n      })\n      .catch((err) => console.log(err));\n};\n\n// ADD Task\nexport const addTask = (task) => (dispatch, getState) => {\n  //console.log(task)\n  axios\n    .post('/api/tasks/', task, tokenConfig(getState))\n    .then((res) => {\n      dispatch(createMessage({ addTask: 'Task Added' }));\n      dispatch({\n        type: ADD_TASK,\n        payload: res.data,\n      });\n    })\n    .catch((err) => dispatch(returnErrors(err.response.data, err.response.status)));\n};\n\n//Update Task\nexport const updateTask = (task) => (dispatch, getState) => {\n  axios\n    .patch(`/api/tasks/${task.id}/`,\n    {\n      'completed': task.completed, \n      'title': task.title\n    }, tokenConfig(getState))\n    .then((res) => {\n      dispatch(createMessage({ updateTask: 'Task Updated' }));\n      dispatch({\n        type: UPDATE_TASK,\n        payload: res.data,\n      });\n    })\n    .catch((err) => dispatch(returnErrors(err.response.data, err.response.status)));\n};","import React, {Fragment} from 'react'\nimport Tasks from './Tasks'\n\nexport default function Dashboard() {\n    return (\n        <Fragment>\n            <Tasks></Tasks>\n        </Fragment>\n    )\n}\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nexport class Login extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  static propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.login(this.state.username, this.state.password);\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    if (this.props.isAuthenticated) {\n        return <Redirect to=\"/\" />;\n    }\n    const { username,password } = this.state;\n    return (\n      <div className=\"col-md-6 m-auto\">\n        <div className=\"card card-body mt-5\">\n          <h2 className=\"text-center\">Login</h2>\n          <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\">\n              <label>Username</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                onChange={this.onChange}\n                value={username}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                onChange={this.onChange}\n                value={password}\n              />\n            </div>\n            <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Login\n              </button>\n            </div>\n            <p>\n              Don't have an account? <Link to=\"/register\">Register</Link>\n            </p>\n          </form>\n          <p>**Username and Password is case sensitive</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.auth.isAuthenticated,\n});\n  \nexport default connect(mapStateToProps, { login })(Login);","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { register } from '../../actions/auth';\nimport { createMessage } from '../../actions/messages';\n\nexport class Register extends Component {\n  state = {\n    username: '',\n    email: '',\n    password: '',\n    password2: '',\n  };\n\n  static propTypes = {\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { username, email, password, password2 } = this.state;\n    if (password !== password2) {\n      this.props.createMessage({ passwordNotMatch: 'Passwords do not match' });\n    } else {\n      const newUser = {\n        username,\n        password,\n        email,\n      };\n      this.props.register(newUser);\n    }\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    if(this.props.isAuthenticated) {\n      return <Redirect to=\"/\" />;\n    }\n\n    const { username, email, password, password2 } = this.state;\n    return (\n      <div className=\"col-md-6 m-auto\">\n        <div className=\"card card-body mt-5\">\n          <h2 className=\"text-center\">Register</h2>\n          <form onSubmit={this.onSubmit}>\n            <div className=\"form-group\">\n              <label>Username</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                onChange={this.onChange}\n                value={username}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Email</label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                onChange={this.onChange}\n                value={email}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                onChange={this.onChange}\n                value={password}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Confirm Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password2\"\n                onChange={this.onChange}\n                value={password2}\n              />\n            </div>\n            <div className=\"form-group\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                Register\n              </button>\n            </div>\n            <p>\n              Already have an account? <Link to=\"/login\">Login</Link>\n            </p>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { register, createMessage })(Register);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      if (auth.isLoading) {\n        return <h2>Loading...</h2>;\n      } else if (!auth.isAuthenticated) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Component {...props} />;\n      }\n    }}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import { GET_TASKS, DELETE_TASK, ADD_TASK, UPDATE_TASK } from '../actions/types.js';\n\nconst initialState = {\n    tasks: [],\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_TASKS:\n            return {\n                ...state,\n                tasks: action.payload,\n            };\n        case DELETE_TASK:\n            //console.log(action.payload)\n            return {\n                ...state,\n                tasks: state.tasks.filter(task => task.id !== action.payload)\n            };\n        case ADD_TASK:\n            //console.log('task added')\n            return {\n                ...state,\n                tasks: [...state.tasks, action.payload]\n            }\n        case UPDATE_TASK:\n            return {\n                ...state,\n                tasks: [...state.tasks]\n            }\n        default:\n            return state;\n    }\n    \n}","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n      };\n    default:\n      return state;\n  }\n}","import { CREATE_MESSAGE } from '../actions/types';\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_MESSAGE:\n      return (state = action.payload);\n    default:\n      return state;\n  }\n}","import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n  } from '../actions/types';\n  \n  const initialState = {\n    token: localStorage.getItem('token'),\n    //isAuthenticated: null,\n    isAuthenticated: localStorage.getItem('isAuthenticated'),\n    isLoading: false,\n    user: JSON.parse(localStorage.getItem('user')),\n  };\n  \n  export default function (state = initialState, action) {\n    switch (action.type) {\n      case USER_LOADING:\n        return {\n          ...state,\n          isLoading: true,\n        };\n      case USER_LOADED:\n        return {\n          ...state,\n          isAuthenticated: true,\n          isLoading: false,\n          user: action.payload,\n        };\n      case LOGIN_SUCCESS:\n      case REGISTER_SUCCESS:\n        localStorage.setItem('token', action.payload.token);\n        localStorage.setItem('isAuthenticated', true);\n        localStorage.setItem('user', JSON.stringify(action.payload.user));\n        return {\n          ...state,\n          ...action.payload,\n          isAuthenticated: true,\n          isLoading: false,\n        };\n      case AUTH_ERROR:\n      case LOGIN_FAIL:\n      case LOGOUT_SUCCESS:\n      case REGISTER_FAIL:\n        localStorage.removeItem('token');\n        localStorage.removeItem('isAuthenticated');\n        localStorage.removeItem('user');\n        return {\n          ...state,\n          token: null,\n          user: null,\n          isAuthenticated: false,\n          isLoading: false,\n        };\n      default:\n        return state;\n    }\n  }","import { combineReducers } from \"redux\";\nimport tasks from \"./tasks\";\nimport errors from \"./errors\";\nimport messages from \"./messages\";\nimport auth from \"./auth\";\n\nexport default combineReducers({\n    tasks,\n    errors,\n    messages,\n    auth\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React, { Component, Fragment } from 'react';\nimport { withAlert } from 'react-alert';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport class Alerts extends Component {\n\n    static propTypes = {\n        error: PropTypes.object.isRequired,\n        message: PropTypes.object.isRequired,\n    }\n\n    componentDidUpdate(prevProps) {\n        const { error, alert, message } = this.props;\n        if(error !== prevProps.error) {\n            if (error.msg.title) alert.error(error.msg.title.join());\n            if (error.msg.email) alert.error(error.msg.email.join());\n            if (error.msg.password) alert.error(`Password: ${error.msg.password.join()}`);\n            if (error.msg.non_field_errors) alert.error(error.msg.non_field_errors.join());\n            if (error.msg.username) alert.error(`Username: ${error.msg.username.join()}`);\n        }\n\n        if(message !== prevProps.message) {\n            if (message.deleteTask) alert.success(message.deleteTask);\n            if (message.addTask) alert.success(message.addTask);\n            if (message.updateTask) alert.success(message.updateTask);\n            if (message.passwordNotMatch) alert.error(message.passwordNotMatch);\n        }\n    }\n\n    render() {\n        return <Fragment/>;\n    }\n}\n\nconst mapStateToProps = state => ({\n    error: state.errors,\n    message: state.messages\n})\n\nexport default connect(mapStateToProps)(withAlert()(Alerts));","import React, { Component, Fragment } from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\n\nimport Header from './components/layout/Header';\nimport Dashboard from './components/tasks/Dashboard';\nimport Login from './components/accounts/Login';\nimport Register from './components/accounts/Register';\nimport PrivateRoute from './components/common/PrivateRoute';\n\nimport { Provider } from 'react-redux';\nimport store from \"./store\";\nimport Alerts from './components/layout/Alerts';\n\n// Alert Options\nconst alertOptions = {\n  timeout: 3000,\n  position: 'top center',\n};\n\nexport class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <AlertProvider template={AlertTemplate} {...alertOptions}>\n          <Router>\n            <Fragment>\n              <Header/>\n              <Alerts/>\n              <div className='container'>\n              <Switch>\n                  <PrivateRoute exact path=\"/\" component = {Dashboard} />\n                  <Route exact path=\"/register\" component = {Register} />\n                  <Route exact path=\"/login\" component = {Login} />\n                </Switch>\n              </div>\n            </Fragment>\n          </Router>\n        </AlertProvider>\n      </Provider>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}